ViewBoard.jsp
・el式でデータベースの各リアクションの値を持ってくる処理
　(現在はEL式のみ記載、データを持ってくる処理は書いていない)

・el式で各投稿、返信の日時を持ってくる処理
　(現在はEL式のみ記載、データを持ってくる処理は書いていない)

・リアクションアイコンのクリック時の処理（カウントを増やす）
　→pタグの中身をjavascriptに渡す（getElementedby）
　　javascript内でint型にキャスト
　　値を一つ増やす
    String型に変換して値を戻り値として返す
　　※この際0、1で判断できる変数を用意しておき、0であればカウントを一つ増やす
　　　１であればカウントを一つ戻す（この際クリックごとにデータベースを更新するかどうかは保留）
　　（１アカウントのリアクションは１つ分までという仕様にする）

・ユーザーIDによって投稿された物のみに編集、削除ボタンを表示する機能
　→getElementedByによって得られたユーザーテーブルのユーザーIDと、返信テーブル内のユーザーID
　　が合致する返信に対してのみ表示するIF文もしくはjsp内のforEach文を作成

・削除ボタン、編集ボタンのクリックによって、各サーブレットにデータを返し、サーブレットを
　daoファイルにポストさせる
　daoファイルはゲットした値を元に編集や、削除を行う

・返信ボタンのクリックによって返信テーブルに利用者のユーザーIDと共に返信内容をデータを挿入する処理

・検索ボタンによって該当する返信部分を目立たせる表示をする

・リアクションを登録するボタン

・１種類しかリアクションを登録できないようにする仕様
　→それぞれのTFで変更したいTF以外のTFの値が１だった場合に、変更を行わずにwindow.alertを用いて
　　「出来るリアクションは１種類までです」

ViewBoard.css
・リアクションのpタグ内の色やフォント部分

・

・

・



ManagerViewBoard.jsp
・全てに削除機能のみを搭載（ボタンクリックでデータベースを更新）
　※拡張機能としてデータベースのユーザー側と管理者側でエラーを起こさないために
　　データベースの占有ロック機能の搭載

・リアクションのクリックのおける処理は無し

・拡張機能：マニュアルの編集（検索ノウハウなどを付け加えるため）

・

・


ManagerViewBoard.css
・今のところ特別な仕様は無し
・
・
・


BoardDao.java/ReplyDao.java
・投稿返信含め、セッションIDとユーザーIDが等しい内容にのみ編集削除を表示
　forEach分の中に判別できる要素を追加、判断
※投稿テーブルと返信テーブルに接続するメソッドは別
・


SearchDao.java
・
・